The development version is a newer version of Red Eclipse that is still being developed. If you want to help test the game, or experience the newer features, use this guide to obtain the latest development version of the game.

Notes:
* The client-server protocol normally changes between releases, so you might not be able to play on servers that are running the stable version.
* If you experience a bug or other unwanted behaviour, and want to submit a bug report, see [[Debug]] for instructions.
* The Red Eclipse home directory (the one containing screenshots, custom maps, configs, etc.) is now inside the Git directory itself, under the directory called "home".


== Windows ==

=== git-bash ===
* Download and install Git from http://msysgit.github.io/

==== Initial Clone ====
* Start git-bash 
* Change to the directory where the clone should be stored
For example
 cd /c/Users/me/Documents
* Clone recursively (to also initialize and clone the submodules)
 git clone --recursive https://github.com/red-eclipse/base.git redeclipse-git
This will download Red Eclipse to the "redeclipse-git" directory within the current working directory.

==== Update Existing Clone ====
* Start git-bash and change to the "redeclipse-git" clone directory
* Fetch and merge the new changes in the base repository
 git pull
* Fetch and checkout the submodule changes
 git submodule update

=== TortoiseGit ===
* Install according to https://code.google.com/p/tortoisegit/wiki/SetupHowTo
==== Initial Clone ====
* Make a "redeclipse-git" directory (folder)
* Right click on the directory
* Click on "Git Clone..."
* In the "Url:" blank, enter https://github.com/red-eclipse/base.git
* Checkmark "Recursive" if you want the data submodule
* Click "OK" and wait for the clone to complete

==== Update Existing Clone ====
* Right click on the clone directory and choose "TortoiseGit"->"Pull" and then click "OK"
* Right click on the clone directory and choose "TortoiseGit"->"Submodule Update" and then click "OK"

===Github for Windows===
<span style="color:red">WARNING: Using GitHub for Windows requires a solid understanding of Git and UNIX, and can otherwise be confusing.</span>
==== Clone ====
* Download and install Github for Windows from https://windows.github.com/
* Follow install directions
* In your browser, navigate to the RE Github repository page, https://www.github.com/red-eclipse/base
* In the right sidebar, above download zip, you will see a link that says "Clone in Desktop", click on it
* Select Github
* Let Github do its thing
* Done!

==== Updating ====
* Go the the repository in Github for Windows
* Press the Sync button in the top right corner
* Done!

==GNU/Linux==

===Clone via Git===
* Open the terminal
* Install Git and the build & run dependencies of Red Eclipse. On a Debian-like system (e.g. Ubuntu, Linux Mint), this can be done with the command
 sudo apt-get install git build-essential libsdl-mixer1.2-dev libsdl-image1.2-dev libsdl1.2-dev
* Clone the Git repository with the command
 git clone --recursive https://github.com/red-eclipse/base.git redeclipse-git
This will download Red Eclipse to the "redeclipse-git" directory within the current working directory.

===Compile===
* Use standard GNU make to compile
 cd base/
 make -C src/ install
* Start the game
 ./redeclipse.sh

===Update via Git===
* Update the local copy
 cd /path/to/base
 git pull
 git submodule update
* Recompile via
 make -C src/ clean install

== OS X ==

===Prerequisites===
* Install xcode such that xcodebuild is in your shell path (These instructions were created for xcode 3.2.6 but they should work on other versions too)
* Make sure the directory ~/Library/Frameworks exists
* Download, mount, and copy the .framework folder from each of the following to ~/Library/Frameworks/
 http://www.libsdl.org/release/SDL-1.2.14.dmg
 http://www.libsdl.org/projects/SDL_image/release/SDL_image-1.2.10.dmg 
 http://www.libsdl.org/projects/SDL_mixer/release/SDL_mixer-1.2.11.dmg

===Compile===
* Open the terminal
* Navigate to the location that you downloaded Red Eclipse
 cd /path/to/redeclipse-svn
* (Clean previous builds)
 xcodebuild -project src/xcode/redeclipse.xcodeproj clean -configuration Debug
* Build using xcode
 xcodebuild -project src/xcode/redeclipse.xcodeproj -configuration Debug -alltargets
* Remove the existing build from the bin directory
 rm -rf bin/redeclipse.app
* Copy the new build to the bin directory
 cp -r src/xcode/build/Debug/redeclipse.app bin
* To start Red Eclipse, simply double-click the "Red Eclipse" application in the bin/ directory, or execute
 bin/redeclipse.app/Contents/MacOS/redeclipse

== Using Development Version Settings and Regular Settings in Tandem ==

To keep settings for both the current release and the development version, you can simply modify the '''''-h''''' argument inside the script in the development version directory. This way, there will be two separate home directories, and your settings will not be mixed.
The home directory is where your custom sounds, music, maps, graphics, scripts, etc., as well as "init.cfg" and "config.cfg" reside. Having both the current release of Red Eclipse and a development version of Red Eclipse will use the same home directory by default, and can therefore cause a clash of settings.

The following instructions will setup a directory named "home" inside the Red Eclipse development version directory for your custom data:

 [Red Eclipse development version directory]
     [bin]
     [data]
     [home] <--
     [src]
     ...

===Windows===

* In the Red Eclipse development version directory, open the '''redeclipse.bat''' file in a text editor (like notepad).
* On Line 5 you will see:
 set APP_OPTIONS=
* Simply add "'''''-h<path/dir name>'''''" to the end of that line
Where '''<path/dir name>''' is either the path to a directory outside of the Red Eclipse SVN folder, or just a name, which will create a folder inside that directory, for example
 set APP_OPTIONS=-hhome

===GNU/Linux===
* In the Red Eclipse development version directory, open the '''redeclipse.sh''' file in a text editor (like gedit)
On line 12 you will see
 APP_OPTIONS=""
* Simply add '''''-h<path/dir name>''''' to the end of that line
Where '''<path/dir name>''' is either the path to a directory outside of the Red Eclipse SVN folder, or just a name, which will create a folder inside that directory, for example
 APP_OPTIONS="-hhome"

===OS X===
* In the your Red Eclipse development version directory, in the subfolder '''bin/redeclipse.app/Contents/MacOS/''' open the '''redeclipse''' file in a text editor (like TextEdit)
On line 6 through 10 you will see
 if [ $osxver -ge 10600 ]; then
         exec "${0}_universal" "$@"
 else   
         exec "${0}_compatible" "$@"
 fi
* Simply add '''''-h<path/dir name>''''' before the "$@" in both those lines
Where '''<path/dir name>''' is either the path to a directory outside of the Red Eclipse SVN folder, or just a name, which will create a folder inside that directory, for example
 if [ $osxver -ge 10600 ]; then
         exec "${0}_universal" -h../home "$@"
 else   
         exec "${0}_compatible" -h../home "$@"
 fi


== SVN History ==
The history of the project prior to the move to Git is available via the (read-only) repository

 svn://svn.icculus.org/redeclipse

and also as a git-svn mirror at
 
 git://redeclipse.git.sourceforge.net/gitroot/redeclipse/redeclipse

for which there is also a webviewer at

http://redeclipse.git.sourceforge.net/git/gitweb.cgi?p=redeclipse/redeclipse;a=summary

* The Git repository size is '''more than 3.6G''' since it includes the full history since revision 1